/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package viewQuanLyBenhNhan;

import controller.DAO;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.sql.Connection;
import javax.swing.table.DefaultTableModel;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.Format;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import model.patient;
import org.apache.poi.xwpf.usermodel.ParagraphAlignment;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
import org.apache.poi.xwpf.usermodel.XWPFRun;
import view.Home;

/**
 *
 * @author QuangDuong
 */
public class Xuat_vien extends javax.swing.JFrame {
    String b;

    /**
     * Creates new form viewTimKiem
     */
    public Xuat_vien() {
        initComponents();
        this.setVisible(true); // Hien Frame
        this.setTitle("Xuất Viện"); // tieu de Frame
        this.setLocationRelativeTo(null);
          int number;
         DefaultTableModel tbn = new DefaultTableModel();
         Vector row, column;
         column = new Vector();
         DAO d =new DAO();
         Connection conn = d.getConnection();
        try {
            String name = jTextField1.getText();
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("select * from patient ");
            ResultSetMetaData metadata = rs.getMetaData();
            number = metadata.getColumnCount();    
            
            for(int i = 1; i <= number; i++){
                column.add(metadata.getColumnName(i));
            }
            tbn.setColumnIdentifiers(column);
            
            while(rs.next()){
                row = new Vector();
                for(int i = 1; i <= number; i++){
                    row.addElement(rs.getString(i));
                }
                tbn.addRow(row);
                table.setModel(tbn);
            }
            
        } catch (Exception ex) {
            Logger.getLogger(Xuat_vien.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        back = new javax.swing.JButton();
        timKiem = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        btnThanhToan = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 204, 153));

        jPanel1.setBackground(new java.awt.Color(0, 204, 153));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nhập mã bệnh nhân");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã BN", "Họ tên", "Tên khoa", "Địa Chỉ", "Giới Tính", "SDT", "Loại bệnh", "NgayNhậpViện", "NgayXuatVien"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        back.setText("back");
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        timKiem.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        timKiem.setText("Tìm");
        timKiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                timKiemMouseClicked(evt);
            }
        });
        timKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timKiemActionPerformed(evt);
            }
        });

        btnThanhToan.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        btnThanhToan.setText("Xuất Viện");
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(391, 391, 391)
                        .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)
                        .addComponent(timKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(back)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 971, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 21, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(back)
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timKiem)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnThanhToan)
                .addContainerGap(156, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 128, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void timKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timKiemActionPerformed
        
    }//GEN-LAST:event_timKiemActionPerformed

    private void timKiemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_timKiemMouseClicked
         int number;
         DefaultTableModel tbn = new DefaultTableModel();
         Vector row, column;
         column = new Vector();
         DAO d =new DAO();
         Connection conn = d.getConnection();
        try {
            String name = jTextField1.getText();
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("select * from patient where maBN like '%"+name+"'");
            ResultSetMetaData metadata = rs.getMetaData();
            number = metadata.getColumnCount();    
            
            for(int i = 1; i <= number; i++){
                column.add(metadata.getColumnName(i));
            }
            tbn.setColumnIdentifiers(column);
            
            while(rs.next()){
                row = new Vector();
                for(int i = 1; i <= number; i++){
                    row.addElement(rs.getString(i));
                }
                tbn.addRow(row);
                table.setModel(tbn);
            }
            
        } catch (Exception ex) {
            Logger.getLogger(viewTimKiem.class.getName()).log(Level.SEVERE, null, ex);
        }       
         
    }//GEN-LAST:event_timKiemMouseClicked
     
    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        this.dispose();
        new Home();
    }//GEN-LAST:event_backMouseClicked

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_backActionPerformed

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        int column = 7;
        int row = 0;
        int column2 = 8; 
        String value = table.getModel().getValueAt(row, column).toString();
        String value2 = table.getModel().getValueAt(row, column2).toString();
        String ma = table.getModel().getValueAt(row, 0).toString();
        String hoten = table.getModel().getValueAt(row, 1).toString();
        String khoa = table.getModel().getValueAt(row, 2).toString();
        String diachi = table.getModel().getValueAt(row, 3).toString();
        String gioitinh = table.getModel().getValueAt(row, 4).toString();
        String sdt = table.getModel().getValueAt(row, 5).toString(); 
        
        String  dates[] = value.split("-");
        Date dates1 = new Date(Integer.parseInt(dates[0])-1900, Integer.parseInt(dates[1])-1, Integer.parseInt(dates[2]));
        String  date2[] = value2.split("-");
        Date dates2 = new Date(Integer.parseInt(date2[0])-1900, Integer.parseInt(date2[1])-1, Integer.parseInt(date2[2]));
        Format formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        String s1 = formatter.format(dates1);
        String s2 = formatter.format(dates2);
               
        long getDiff = dates2.getTime() - dates1.getTime();
        long getDaysDiff = getDiff / (24 * 60 * 60 * 1000);
        b = "Mã: "+ma+" , họ tên: "+ hoten+", khoa: " +khoa+", địa chỉ: "+diachi+", giới tính: "+gioitinh+", số điện thoại: "+sdt+", \nTổng tiền hết: "+getDaysDiff *300000+"đ";
        String b1 = "Mã: "+ma+" , họ tên: "+ hoten+", khoa: " +khoa+", địa chỉ: "+diachi+", giới tính: "+gioitinh+", số điện thoại: "+sdt+",";
        
//        try {
//
//            //Bước 1: Khởi tạo đối tượng để sinh ra file word
//
//            XWPFDocument document = new XWPFDocument();
//
// 
//
//            //Bước 2: Tạo tiêu đề bài viết
//
//            XWPFParagraph titleGraph = document.createParagraph();
//            titleGraph.setAlignment(ParagraphAlignment.CENTER);
//            String title = "Danh sách những người đã từng nội trú ở viện";
//            XWPFRun titleRun = titleGraph.createRun();
//            titleRun.setBold(true);
//            titleRun.setText(title);
//            //Bước 3: Tạo đoạn văn bản 1 trong tài liệu:
//
//            XWPFParagraph para1 = document.createParagraph();
//            para1.setAlignment(ParagraphAlignment.LEFT);
//            XWPFRun para1Run = para1.createRun();
//            para1Run.setText(b1);
//
//
//
//            FileOutputStream out = new FileOutputStream("D://data.docx");
//
//            document.write(out);
//
//            out.close();
//
//            document.close();
//
//        } catch (Exception ex) {
//
//                 System.out.println(ex.toString());
//
//        }
        try {

            //Bước 1: Khởi tạo đối tượng để sinh ra file word

            XWPFDocument document = new XWPFDocument();

 

            //Bước 2: Tạo tiêu đề bài viết

            XWPFParagraph titleGraph = document.createParagraph();
            titleGraph.setAlignment(ParagraphAlignment.CENTER);
            String title = "BỆNH VIỆN MỘT THÀNH VIÊN";
            XWPFRun titleRun = titleGraph.createRun();
            titleRun.setBold(true);
            titleRun.setText(title);
            
             XWPFParagraph para21 = document.createParagraph();           
            para21.setAlignment(ParagraphAlignment.CENTER); 
            XWPFRun para21Run = para21.createRun();           
            para21Run.addBreak();
            para21Run.setText("PHIẾU XUẤT VIỆN");

            para21Run.addBreak();

            
            //Bước 3: Tạo đoạn văn bản 1 trong tài liệu:

            XWPFParagraph para1 = document.createParagraph();
            para1.setAlignment(ParagraphAlignment.LEFT);
            XWPFRun para1Run = para1.createRun();
            para1Run.setText("Họ tên : " + hoten +"\n");
            para1Run.addBreak();
            para1Run.addBreak();
	    para1Run.setText("Mã bệnh nhân : " + ma +"\n");
            para1Run.addBreak();
            para1Run.addBreak();
	    para1Run.setText("Khoa : " + khoa +"\n");
            para1Run.addBreak();
            para1Run.addBreak();
	    para1Run.setText("Địa chỉ : " + diachi +"\n");
            para1Run.addBreak();
            para1Run.addBreak();
	    para1Run.setText("Giới tính : " + gioitinh +"\n");
            para1Run.addBreak();
            para1Run.addBreak();
 	    para1Run.setText("Số điện thoại : " + sdt +"\n");
            para1Run.addBreak();
            para1Run.addBreak();
	    para1Run.setText("Số ngày nằm viện : " + getDaysDiff +"\n");
            para1Run.addBreak();
            para1Run.addBreak();
	   
            
            XWPFParagraph para2 = document.createParagraph();           
            para2.setAlignment(ParagraphAlignment.RIGHT); 
            XWPFRun para2Run = para2.createRun();           

            para2Run.setText("Ngày...Tháng...Năm....");

            para2Run.addBreak();

            para2Run.setText("Trưởng Khoa");
	  


            FileOutputStream out = new FileOutputStream("D://xuatvien.docx");

            document.write(out);

            out.close();

            document.close();

        } catch (Exception ex) {

                 System.out.println(ex.toString());

        }
    }//GEN-LAST:event_btnThanhToanActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Xuat_vien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Xuat_vien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Xuat_vien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Xuat_vien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Xuat_vien().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable table;
    private javax.swing.JButton timKiem;
    // End of variables declaration//GEN-END:variables
}
